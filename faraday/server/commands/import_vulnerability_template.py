from __future__ import absolute_import

import csv
import tempfile

import requests
from colorama import init
from colorama import Fore
import logging

from sqlalchemy.exc import IntegrityError
from tqdm import tqdm

from faraday.server.web import app
from faraday.server.models import (
    db,
    VulnerabilityTemplate,
)
CWE_PATH="https://storage.googleapis.com/faraday-build/data/cwe_en.csv"

logger = logging.getLogger(__name__)

init()


def import_vulnerability_templates():
    imported_rows = 0
    duplicated_rows = 0
    with app.app_context():
        try:
            res = requests.get(CWE_PATH)
        except Exception as e:
            print(f'[{Fore.RED}-{Fore.WHITE}] An error has occurred downloading the file {e}')
            return

        if res.status_code != 200:
            print(f'[{Fore.RED}-{Fore.WHITE}] An error has occurred downloading the file. Response was {res.status_code}')
            return

        cwe_file = tempfile.TemporaryFile(mode="w+t")
        cwe_file.write(res.content.decode('utf8'))
        cwe_file.seek(0)

        vulnerability_templates = csv.DictReader(cwe_file)
        for vulnerability_template in tqdm(vulnerability_templates, desc='Templates'):
            vulnerability_template = dict(vulnerability_template)

            references = [ref.strip() for ref in vulnerability_template['references'].split(',')]
            try:
                v = VulnerabilityTemplate(name=vulnerability_template['name'],
                                          description=vulnerability_template['description'],
                                          severity=vulnerability_template['exploitation'],
                                          resolution=vulnerability_template['resolution'],
                                          references=references,
                                          shipped=True)
                db.session.add(v)
                db.session.flush()
                imported_rows += 1
            except IntegrityError:
                duplicated_rows += 1
                db.session.rollback()
        db.session.commit()

        print(f'[{Fore.GREEN}+{Fore.WHITE}] Imported templates: {imported_rows} \t Duplicated templates: {duplicated_rows}')
