"""add cvss

Revision ID: 3303e5f5eb9d
Revises: 85aeb4185f98
Create Date: 2022-07-22 23:54:14.093686+00:00

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = '3303e5f5eb9d'
down_revision = '85aeb4185f98'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('vulnerability', sa.Column('_cvss2_vector_string', sa.Text(), nullable=True))
    op.add_column('vulnerability', sa.Column('cvss2_base_score', sa.Float(), nullable=True))
    op.add_column('vulnerability', sa.Column('cvss2_temporal_score', sa.Float(), nullable=True))
    op.add_column('vulnerability', sa.Column('cvss2_environmental_score', sa.Float(), nullable=True))
    op.add_column('vulnerability', sa.Column('cvss2_access_vector', sa.Text(), nullable=True))
    op.add_column('vulnerability', sa.Column('cvss2_access_complexity', sa.Text(), nullable=True))
    op.add_column('vulnerability', sa.Column('cvss2_authentication', sa.Text(), nullable=True))
    op.add_column('vulnerability', sa.Column('cvss2_impact', sa.Text(), nullable=True))
    op.add_column('vulnerability', sa.Column('cvss2_integrity_impact', sa.Text(), nullable=True))
    op.add_column('vulnerability', sa.Column('cvss2_availability_impact', sa.Text(), nullable=True))
    op.add_column('vulnerability', sa.Column('cvss2_exploitability', sa.Text(), nullable=True))
    op.add_column('vulnerability', sa.Column('cvss2_remediation_level', sa.Text(), nullable=True))
    op.add_column('vulnerability', sa.Column('cvss2_report_confidence', sa.Text(), nullable=True))
    op.add_column('vulnerability', sa.Column('cvss2_collateral_damage_potential', sa.Text(), nullable=True))
    op.add_column('vulnerability', sa.Column('cvss2_target_distribution', sa.Text(), nullable=True))
    op.add_column('vulnerability', sa.Column('cvss2_confidentiality_requirement', sa.Text(), nullable=True))
    op.add_column('vulnerability', sa.Column('cvss2_integrity_requirement', sa.Text(), nullable=True))
    op.add_column('vulnerability', sa.Column('cvss2_availability_requirement', sa.Text(), nullable=True))
    op.add_column('vulnerability', sa.Column('_cvss3_vector_string', sa.Text(), nullable=True))
    op.add_column('vulnerability', sa.Column('cvss3_base_score', sa.Float(), nullable=True))
    op.add_column('vulnerability', sa.Column('cvss3_temporal_score', sa.Float(), nullable=True))
    op.add_column('vulnerability', sa.Column('cvss3_environmental_score', sa.Float(), nullable=True))
    op.add_column('vulnerability', sa.Column('cvss3_attack_vector', sa.Text(), nullable=True))
    op.add_column('vulnerability', sa.Column('cvss3_attack_complexity', sa.Text(), nullable=True))
    op.add_column('vulnerability', sa.Column('cvss3_privilege_required', sa.Text(), nullable=True))
    op.add_column('vulnerability', sa.Column('cvss3_user_interaction', sa.Text(), nullable=True))
    op.add_column('vulnerability', sa.Column('cvss3_impact', sa.Text(), nullable=True))
    op.add_column('vulnerability', sa.Column('cvss3_integrity_impact', sa.Text(), nullable=True))
    op.add_column('vulnerability', sa.Column('cvss3_availability_impact', sa.Text(), nullable=True))
    op.add_column('vulnerability', sa.Column('cvss3_exploit_code_maturity', sa.Text(), nullable=True))
    op.add_column('vulnerability', sa.Column('cvss3_remediation_level', sa.Text(), nullable=True))
    op.add_column('vulnerability', sa.Column('cvss3_report_confidence', sa.Text(), nullable=True))
    op.add_column('vulnerability', sa.Column('cvss3_confidentiality_requirement', sa.Text(), nullable=True))
    op.add_column('vulnerability', sa.Column('cvss3_integrity_requirement', sa.Text(), nullable=True))
    op.add_column('vulnerability', sa.Column('cvss3_availability_requirement', sa.Text(), nullable=True))
    op.add_column('vulnerability', sa.Column('cvss3_modified_attack_vector', sa.Text(), nullable=True))
    op.add_column('vulnerability', sa.Column('cvss3_modified_attack_complexity', sa.Text(), nullable=True))
    op.add_column('vulnerability', sa.Column('cvss3_modified_privileges_required', sa.Text(), nullable=True))
    op.add_column('vulnerability', sa.Column('cvss3_modified_user_interaction', sa.Text(), nullable=True))
    op.add_column('vulnerability', sa.Column('cvss3_modified_scope', sa.Text(), nullable=True))
    op.add_column('vulnerability', sa.Column('cvss3_modified_confidentiality_impact', sa.Text(), nullable=True))
    op.add_column('vulnerability', sa.Column('cvss3_modified_integrity_impact', sa.Text(), nullable=True))
    op.add_column('vulnerability', sa.Column('cvss3_modified_availability_impact', sa.Text(), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('vulnerability', 'cvss3_modified_availability_impact')
    op.drop_column('vulnerability', 'cvss3_modified_integrity_impact')
    op.drop_column('vulnerability', 'cvss3_modified_confidentiality_impact')
    op.drop_column('vulnerability', 'cvss3_modified_scope')
    op.drop_column('vulnerability', 'cvss3_modified_user_interaction')
    op.drop_column('vulnerability', 'cvss3_modified_privileges_required')
    op.drop_column('vulnerability', 'cvss3_modified_attack_complexity')
    op.drop_column('vulnerability', 'cvss3_modified_attack_vector')
    op.drop_column('vulnerability', 'cvss3_availability_requirement')
    op.drop_column('vulnerability', 'cvss3_integrity_requirement')
    op.drop_column('vulnerability', 'cvss3_confidentiality_requirement')
    op.drop_column('vulnerability', 'cvss3_report_confidence')
    op.drop_column('vulnerability', 'cvss3_remediation_level')
    op.drop_column('vulnerability', 'cvss3_exploit_code_maturity')
    op.drop_column('vulnerability', 'cvss3_availability_impact')
    op.drop_column('vulnerability', 'cvss3_integrity_impact')
    op.drop_column('vulnerability', 'cvss3_impact')
    op.drop_column('vulnerability', 'cvss3_user_interaction')
    op.drop_column('vulnerability', 'cvss3_privilege_required')
    op.drop_column('vulnerability', 'cvss3_attack_complexity')
    op.drop_column('vulnerability', 'cvss3_attack_vector')
    op.drop_column('vulnerability', 'cvss3_environmental_score')
    op.drop_column('vulnerability', 'cvss3_temporal_score')
    op.drop_column('vulnerability', 'cvss3_base_score')
    op.drop_column('vulnerability', '_cvss3_vector_string')
    op.drop_column('vulnerability', 'cvss2_availability_requirement')
    op.drop_column('vulnerability', 'cvss2_integrity_requirement')
    op.drop_column('vulnerability', 'cvss2_confidentiality_requirement')
    op.drop_column('vulnerability', 'cvss2_target_distribution')
    op.drop_column('vulnerability', 'cvss2_collateral_damage_potential')
    op.drop_column('vulnerability', 'cvss2_report_confidence')
    op.drop_column('vulnerability', 'cvss2_remediation_level')
    op.drop_column('vulnerability', 'cvss2_exploitability')
    op.drop_column('vulnerability', 'cvss2_availability_impact')
    op.drop_column('vulnerability', 'cvss2_integrity_impact')
    op.drop_column('vulnerability', 'cvss2_impact')
    op.drop_column('vulnerability', 'cvss2_authentication')
    op.drop_column('vulnerability', 'cvss2_access_complexity')
    op.drop_column('vulnerability', 'cvss2_access_vector')
    op.drop_column('vulnerability', 'cvss2_environmental_score')
    op.drop_column('vulnerability', 'cvss2_temporal_score')
    op.drop_column('vulnerability', 'cvss2_base_score')
    op.drop_column('vulnerability', '_cvss2_vector_string')
    # ### end Alembic commands ###
