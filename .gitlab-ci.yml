variables:
    TZ: "America/New_York"
    # Configure postgres service (https://hub.docker.com/_/postgres/)
    POSTGRES_DB: custom_db
    POSTGRES_USER: custom_user
    POSTGRES_PASSWORD: custom_pass
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

cache:
  paths:
    - .cache/pip

stages:
    - pre_testing
    - testing
    - post_testing
    - build

services:
    - postgres:latest

closure_compiler:
    image:
        name: jborza/closure-compiler
        entrypoint: ["/bin/sh", "-c"]

    stage: pre_testing
    script:
        - /opt/cc.sh faraday/server/www/scripts

merge_conflict_check:
    image: python:3
    stage: pre_testing
    allow_failure: true
    script:
        - git config --global user.email "you@example.com"
        - git config --global user.name "Mergerbot"
        - python3 merge-conflict-detector.py

pylint:
    image: registry.gitlab.com/faradaysec/faraday/faraday_testing_base  # I just need an image with python-dev and python-pip
    stage: pre_testing
    script:
        - pip install pylint anybadge
        - pylint faraday/server |tee pylint.txt || true
        - score=$(sed -n 's/^Your code has been rated at \([-0-9.]*\)\/.*/\1/p' pylint.txt)
        - anybadge --label pylint --value=$score --file pylint.svg 4=red 6=orange 8=yellow 10=green
    artifacts:
        paths:
            - pylint.svg

postgresql_test:
    image: registry.gitlab.com/faradaysec/faraday/faraday_testing_base
    stage: testing
    coverage: '/TOTAL\s+\d+\s+\d+\s+(\d+%)/'
    script:
        - pip install virtualenv
        - virtualenv -p python2 faraday_venv
        - source faraday_venv/bin/activate
        #- pip install --upgrade -r requirements_server.txt
        - python setup.py install
        - pip install --upgrade responses pytest-xdist pytest-cov
        - pip install --upgrade -r requirements_dev.txt
        - mkdir -p ~/.faraday/config
        - cp tests/data/server.ini ~/.faraday/config
        #- sed -i 's/mapped_table/persist_selectable/' faraday_venv/lib/python2.7/site-packages/flask_sqlalchemy/__init__.py  # TODO remove when flask_sqlalchemy fixes the issue
        - pytest tests -v --capture=sys --cov=./faraday/server --color=yes --disable-warnings --connection-string=postgresql+psycopg2://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres/$POSTGRES_DB
    artifacts:
        when: on_failure
        paths:
            - ~/.faraday/logs/faraday-server.log

sqlite_test:
    image: registry.gitlab.com/faradaysec/faraday/faraday_testing_base
    stage: testing
    coverage: '/TOTAL\s+\d+\s+\d+\s+(\d+%)/'
    script:
        - pip install virtualenv
        - virtualenv -p python2 faraday_venv
        - source faraday_venv/bin/activate
        #- pip install --upgrade -r requirements_server.txt
        - python setup.py install
        - pip install --upgrade responses pytest-xdist pytest-cov
        - pip install --upgrade -r requirements_dev.txt
        - mkdir -p ~/.faraday/config
        - cp tests/data/server.ini ~/.faraday/config
        - pytest tests --capture=sys -v --cov=./faraday/server --color=yes --disable-warnings
    artifacts:
        when: on_failure
        paths:
            - dist/*

generate_release_file:
    image: python:3
    stage: post_testing
    allow_failure: true
    script:
        - apt-get update -qy
        - apt-get install -y python-dev python-pip
        - pip install packaging
        - cd CHANGELOG && python3 changelog.py
    artifacts:
        paths:
            - CHANGELOG/RELEASE.md
    only:
        variables:
            - $FULL_DOC == "True"
            - $RELEASE_FILE == "True"
            - $CI_COMMIT_REF_NAME =~ /^.*\/(dev|master)$/

binary_files:
    image: registry.gitlab.com/faradaysec/faraday/faraday_testing_base
    stage: build
    script:
        - pip install virtualenv
        - virtualenv -p python2 faraday_venv
        - source faraday_venv/bin/activate
        - pip install pyinstaller
        - python setup.py install
        - pyinstaller -F -w --onefile --hidden-import='sqlalchemy.sql.default_comparator' --hidden-import='backports.functools_lru_cache' --hidden-import='depot.io.local' --hidden-import='passlib.handlers.bcrypt' --hidden-import='passlib.handlers.pbkdf2' --hidden-import='passlib.handlers.misc' --hidden-import='passlib.handlers.sha2_crypt' --hidden-import='passlib.handlers.digests' --add-data 'faraday:faraday' faraday/start_server.py
        - mv dist/start_server dist/faraday-server
        - pyinstaller -F -w --onefile --hidden-import='sqlalchemy.sql.default_comparator' --hidden-import='backports.functools_lru_cache' --hidden-import='depot.io.local' --hidden-import='passlib.handlers.bcrypt' --hidden-import='passlib.handlers.pbkdf2' --hidden-import='passlib.handlers.misc' --hidden-import='passlib.handlers.sha2_crypt' --hidden-import='passlib.handlers.digests' --add-data 'faraday:faraday' faraday/manage.py
        - mv dist/manage dist/faraday-manage
        - pyinstaller -F -w --onefile --hidden-import='sqlalchemy.sql.default_comparator' --hidden-import='backports.functools_lru_cache' --hidden-import='depot.io.local' --hidden-import='passlib.handlers.bcrypt' --hidden-import='passlib.handlers.pbkdf2' --hidden-import='passlib.handlers.misc' --hidden-import='passlib.handlers.sha2_crypt' --hidden-import='passlib.handlers.digests' --add-data 'faraday:faraday' faraday/client/start_client.py
        - mv dist/start_client dist/faraday-client
    artifacts:
        name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME-binaries"
        paths:
          - dist/faraday-server
          - dist/faraday-manage
          - dist/faraday-client
        expire_in: 1 month

# This is a test of future test case that will be scheduled
i_do_nothing:
    image: python:3
    stage: post_testing
    allow_failure: true
    script:
        - apt-get update -qy
        - apt-get install -y python-dev python-pip
    only:
        variables:
            - $FULL_TEST == "True"
            - $I_DO_NOTH_TEST == "True"


# This is a test of future test case that will be scheduled
i_do_nothing2:
    image: python:3
    stage: post_testing
    allow_failure: true
    script:
        - apt-get update -qy
        - apt-get install -y python-dev python-pip
    only:
        variables:
            - $FULL_TEST == "True"
            - $I_DO_NOTH2_TEST == "True"
